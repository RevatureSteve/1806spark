package com.Gumball.servlets;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.Gumball.pojo.Users;
import com.Gumball.service.AppService;
import com.fasterxml.jackson.databind.ObjectMapper;

public class UsersByIdServlet extends HttpServlet{
	private static final long serialVersionUID= 256L;
	
	/*
	 * URL -/login/id
	 */

	private AppService appService = new AppService();
	
	public UsersByIdServlet() {
		super();
	}
	
	
	protected void doGet (HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException {
		System.out.println("User Id -GET");
//		
////		//Get the request parameter and convert from string to int
////		// parseIn is static because it is initialized and Integer is labeled before
//		int id = Integer.parseInt(req.getParameter("u_Id"));
//		System.out.println("The id of the User is:" + id);
//////		
//////		//use the int Id to retrieve the tasks of that userId from the AppService (which will probably call the dao and the dao hits the DB)
//		List <Users> us = appService.getAllUsersById(2);
//////		
//////		//Now I have a list of userTask but I need to convert to a JSON string before responding back
//		ObjectMapper mapper = new ObjectMapper();
//		String json = mapper.writeValueAsString(us);
//////		
//////		//send back the JSON String of Users
//		resp.setContentType("application/json");
//		resp.getWriter().write(json);
////		
	}
	
		protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
			System.out.println("User Id -POST");
		}
	

}
