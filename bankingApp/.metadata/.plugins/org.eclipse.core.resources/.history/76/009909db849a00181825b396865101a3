package com.revature.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.revature.domain.User;

public class UserDaoImpl implements UserDao {
	
	//what do I need for a JDBC Connection?
	private final static String USERNAME = "todo_db";
	private final static String PASSWORD = "p4ssw0rd";
	private static final String URL = "jdbc:oracle:thin:@blackcat.cob89bumroku.us-east-2.rds.amazonaws.com:1521:ORCL";
	//and the last thing? Driver which is the JAR for that specific database
	@Override
	public User getUserByUsername(String username) {
		System.err.println("[LOG]---Starting ----getUserByUser() argument " + username);
		//what is this method code going to contain? JDBC Code
		
		//you need this try with resources just closes the connection behind the scenes implicitly 
		//in case there is an issue connecting to oracle db and to ensure there isnt a memory leak, by closing that connection
		//try with resources (stuff inside the () implements autocloseable
		User user = null;
		try (Connection conn = DriverManager.getConnection(URL, USERNAME, PASSWORD);) {
			System.err.println("[LOG]--inside try/catch----getUserByUser() connection to db successful");
			String sql = "SELECT * FROM users WHERE username = ?";
			PreparedStatement ps = conn.prepareStatement(sql); //precompiling the SQL statement w/o the parameter values
			//ensures that is the ? contains an sql keyword like "Drop" it wont be executed (safeguard against malicious code)
			ps.setString(1, username);
			ResultSet resultSet = ps.executeQuery();//can only executeqeQuery for resultsets
			//don't need a loop b/c username is unique in the db and only returns 1 record or none
			if(resultSet.next()) {
				System.err.println("[LOG]----resultset if----getUserByUsername() true, i.e. record exists");
				//result sets have a cursor above the next row and if there is no next row, it is false
				user = new User(resultSet.getInt(1), resultSet.getString(2), resultSet.getString(3));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		System.err.println("[LOG]--Endingh----getUserByUser() returning: " + user);
		return user;
	}

}
